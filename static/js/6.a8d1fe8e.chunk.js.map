{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","demos/chartjs.js","assets/img/bg/background_1920-11.jpg","assets/img/bg/background_1920-18.jpg","assets/img/bg/background_640-1.jpg","assets/img/bg/background_640-3.jpg","assets/img/bg/background_1920-5.jpg","assets/img/bg/background_1920-6.jpg","assets/img/bg/background_1920-7.png","assets/img/bg/background_1920-19.jpg","demos/cardPage.js","../node_modules/reactstrap/es/CardLink.js","pages/CardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","D_NFT_reacttest_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","D_NFT_reacttest_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","D_NFT_reacttest_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","color","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","module","exports","overlayCards","imgUrl","bg5Image","bg6Image","bg7Image","bg19Image","bgCards","gradientCards","propTypes","utils","innerRef","prop_types_default","oneOfType","object","func","string","cssModule","CardLink_CardLink","props","attributes","objectWithoutPropertiesLoose","classnames_default","react_default","esm_extends","ref","es_CardLink","CardPage","Row","Col","md","sm","xs","es_Card","CardImg","src","bg1Image","style","width","height","CardBody","CardTitle","CardText","bg3Image","top","bg11Image","bg18Image","ListGroup","flush","ListGroupItem","href","inverse","Button","outline","alt","CardImgOverlay","Card","avatar","user1Image","subtitle","text","es","options","position","lg","_ref3"],"mappings":"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","file":"static/js/6.a8d1fe8e.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","// const availableColors = [\r\n//   'blue',\r\n//   'indigo',\r\n//   'purple',\r\n//   'pink',\r\n//   'red',\r\n//   'orange',\r\n//   'yellow',\r\n//   'green',\r\n//   'teal',\r\n//   'cyan',\r\n//   'white',\r\n//   'gray',\r\n//   'gray-dark',\r\n//   'primary',\r\n//   'secondary',\r\n//   'success',\r\n//   'info',\r\n//   'warning',\r\n//   'danger',\r\n//   'light',\r\n//   'dark',\r\n// ];\r\n\r\nexport const getColor = (availableColor = 'primary') => {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const color = window\r\n    .getComputedStyle(document.documentElement)\r\n    .getPropertyValue(`--${availableColor}`);\r\n\r\n  return color;\r\n};\r\n\r\nexport const getThemeColors = () => [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'info',\r\n  'warning',\r\n  'danger',\r\n];\r\n","import ChartJS from 'chart.js';\r\nimport { getColor } from 'utils/colors';\r\n\r\nexport const getStackLineChart = ({ labels, data }) => canvas => {\r\n  const ctx = canvas.getContext('2d');\r\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n  gradient.addColorStop(\r\n    0,\r\n    ChartJS.helpers\r\n      .color('#00c9ff')\r\n      .alpha(1)\r\n      .rgbString()\r\n  );\r\n  gradient.addColorStop(\r\n    1,\r\n    ChartJS.helpers\r\n      .color('#00c9ff')\r\n      .alpha(0.2)\r\n      .rgbString()\r\n  );\r\n\r\n  return {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        data,\r\n        label: 'My First dataset',\r\n        borderColor: getColor('primary'),\r\n        backgroundColor: gradient,\r\n        fill: 'origin',\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const stackLineChartOptions = {\r\n  tooltips: {\r\n    intersect: false,\r\n  },\r\n  animation: {\r\n    duration: 0,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      },\r\n    ],\r\n    yAxes: [{ display: false }],\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n  // elements: {\r\n  //   line: {\r\n  //     tension: 0, // disables bezier curves\r\n  //   },\r\n  // },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/background_1920-11.b7f68e8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-18.acfe7046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-1.1420d15b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-3.55e47e98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-5.1d98ff2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-6.1e0eb550.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-7.abf47fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-19.22fc19f2.jpg\";","import ChartJS from 'chart.js';\r\nimport { getColor } from 'utils/colors';\r\n\r\nimport bg5Image from 'assets/img/bg/background_1920-5.jpg';\r\nimport bg6Image from 'assets/img/bg/background_1920-6.jpg';\r\nimport bg7Image from 'assets/img/bg/background_1920-7.png';\r\nimport bg19Image from 'assets/img/bg/background_1920-19.jpg';\r\n\r\nexport const overlayCards = [\r\n  { imgUrl: bg5Image },\r\n  { imgUrl: bg6Image },\r\n  { imgUrl: bg7Image },\r\n  { imgUrl: bg19Image },\r\n];\r\n\r\nexport const bgCards = [\r\n  { color: 'primary' },\r\n  { color: 'secondary' },\r\n  { color: 'info' },\r\n  { color: 'warning' },\r\n  { color: 'danger' },\r\n  { color: 'success' },\r\n];\r\n\r\nexport const gradientCards = [\r\n  { color: 'primary' },\r\n  { color: 'secondary' },\r\n  { color: 'info' },\r\n  { color: 'warning' },\r\n  { color: 'danger' },\r\n  { color: 'success' },\r\n];\r\n\r\nexport const chartjs = {\r\n  line1Props: {\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'My First dataset',\r\n          borderColor: getColor('secondary'),\r\n          backgroundColor: getColor('secondary'),\r\n          data: [0, 13, 22, 34, 46, 35, 30],\r\n          fill: 'origin',\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      tooltips: {\r\n        intersect: false,\r\n      },\r\n      animation: {\r\n        duration: 0,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n          },\r\n        ],\r\n        yAxes: [{ display: false }],\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0, // disables bezier curves\r\n        },\r\n      },\r\n    },\r\n  },\r\n\r\n  line2Props: {\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'My First dataset',\r\n          borderColor: '#6a82fb',\r\n          backgroundColor: '#bcc7ff',\r\n          data: [0, 13, 22, 34, 46, 35, 30],\r\n          fill: 'origin',\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      tooltips: {\r\n        intersect: false,\r\n      },\r\n      animation: {\r\n        duration: 0,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n          },\r\n        ],\r\n        yAxes: [{ display: false }],\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0, // disables bezier curves\r\n        },\r\n      },\r\n    },\r\n  },\r\n\r\n  line3Props: {\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: 'My First dataset',\r\n          borderColor: '#6a82fb',\r\n          backgroundColor: '#bcc7ff',\r\n          data: [0, 13, 22, 34, 46, 35, 30],\r\n          fill: 'origin',\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      tooltips: {\r\n        intersect: false,\r\n      },\r\n      // animation: {\r\n      //   duration: 0,\r\n      // },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n          },\r\n        ],\r\n        yAxes: [{ display: false }],\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0, // disables bezier curves\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const chartJsGradient = {\r\n  line1Props: {\r\n    data: canvas => {\r\n      const ctx = canvas.getContext('2d');\r\n      let gradient = ctx.createLinearGradient(0, 0, 0, 240);\r\n      gradient.addColorStop(\r\n        0,\r\n        ChartJS.helpers\r\n          .color('#00c5dc')\r\n          .alpha(0.7)\r\n          .rgbString()\r\n      );\r\n      gradient.addColorStop(\r\n        1,\r\n        ChartJS.helpers\r\n          .color('#f2feff')\r\n          .alpha(0)\r\n          .rgbString()\r\n      );\r\n\r\n      return {\r\n        labels: [\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: 'Sales Stats',\r\n            backgroundColor: gradient, // Put the gradient here as a fill color\r\n            borderColor: '#0dc8de',\r\n\r\n            pointBackgroundColor: ChartJS.helpers\r\n              .color('#ffffff')\r\n              .alpha(0)\r\n              .rgbString(),\r\n            pointBorderColor: ChartJS.helpers\r\n              .color('#ffffff')\r\n              .alpha(0)\r\n              .rgbString(),\r\n            pointHoverBackgroundColor: '#fc5c7d',\r\n            pointHoverBorderColor: ChartJS.helpers\r\n              .color('#000000')\r\n              .alpha(0.2)\r\n              .rgbString(),\r\n\r\n            //fill: 'start',\r\n            data: [\r\n              20,\r\n              10,\r\n              18,\r\n              15,\r\n              26,\r\n              18,\r\n              15,\r\n              22,\r\n              16,\r\n              12,\r\n              12,\r\n              13,\r\n              10,\r\n              18,\r\n              14,\r\n              24,\r\n              16,\r\n              12,\r\n              19,\r\n              21,\r\n              16,\r\n              14,\r\n              21,\r\n              21,\r\n              13,\r\n              15,\r\n              22,\r\n              24,\r\n              21,\r\n              11,\r\n              14,\r\n              19,\r\n              21,\r\n              17,\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    type: 'line',\r\n    options: {\r\n      title: {\r\n        display: false,\r\n      },\r\n      tooltips: {\r\n        intersect: false,\r\n        mode: 'nearest',\r\n        xPadding: 10,\r\n        yPadding: 10,\r\n        caretPadding: 10,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      hover: {\r\n        mode: 'index',\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n            gridLines: false,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Month',\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            gridLines: false,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Value',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0.19,\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          borderWidth: 12,\r\n        },\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 0,\r\n          right: 0,\r\n          top: 5,\r\n          bottom: 0,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar CardLink = function CardLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-link'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n};\n\nCardLink.propTypes = propTypes;\nCardLink.defaultProps = defaultProps;\nexport default CardLink;","import bg11Image from 'assets/img/bg/background_1920-11.jpg';\r\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\r\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\r\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\r\nimport user1Image from 'assets/img/users/100_1.jpg';\r\nimport { UserCard } from 'components/Card';\r\nimport Page from 'components/Page';\r\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\r\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardLink,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from 'reactstrap';\r\n\r\nconst CardPage = () => {\r\n  return (\r\n    <Page title=\"Cards\" breadcrumbs={[{ name: 'cards', active: true }]}>\r\n      <Row>\r\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n          <Card className=\"flex-row\">\r\n            <CardImg\r\n              className=\"card-img-left\"\r\n              src={bg1Image}\r\n              style={{ width: 'auto', height: 150 }}\r\n            />\r\n            <CardBody>\r\n              <CardTitle>Horizontal Image Card(Left)</CardTitle>\r\n              <CardText>\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n          <Card className=\"flex-row\">\r\n            <CardBody>\r\n              <CardTitle>Horizontal Image Card(Right)</CardTitle>\r\n              <CardText>Some quick example card</CardText>\r\n            </CardBody>\r\n            <CardImg\r\n              className=\"card-img-right\"\r\n              src={bg3Image}\r\n              style={{ width: 'auto', height: 150 }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n          <Card>\r\n            <CardImg top src={bg11Image} />\r\n            <CardBody>\r\n              <CardTitle>Card with image</CardTitle>\r\n              <CardText>\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n          <Card>\r\n            <CardImg top src={bg18Image} />\r\n            <CardBody>\r\n              <CardTitle>Card with list group</CardTitle>\r\n              <CardText>\r\n                This example shows how to use card with list group{' '}\r\n              </CardText>\r\n            </CardBody>\r\n            <ListGroup flush>\r\n              <ListGroupItem>Cras justo odio</ListGroupItem>\r\n              <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n              <ListGroupItem>Morbi leo risus</ListGroupItem>\r\n            </ListGroup>\r\n            <CardBody>\r\n              <CardLink tag=\"a\" href=\"#\">\r\n                Go to details\r\n              </CardLink>\r\n              <CardLink tag=\"a\" href=\"#\">\r\n                More\r\n              </CardLink>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {['', 'top', 'left', 'right'].map((color, index) => (\r\n          <Col key={index} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <Card\r\n              inverse\r\n              className={`border-0 bg-gradient-theme${\r\n                !!color ? '-' : ''\r\n              }${color}`}\r\n              style={{\r\n                height: 200,\r\n              }}\r\n            >\r\n              <CardBody className=\"d-flex flex-column justify-content-start align-items-start\">\r\n                <CardTitle>Card title</CardTitle>\r\n                <CardText>card text</CardText>\r\n              </CardBody>\r\n\r\n              <CardBody className=\"d-flex justify-content-between align-items-center\">\r\n                <CardText>Karl David</CardText>\r\n                <Button outline color=\"light\">\r\n                  Click\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Row>\r\n        {overlayCards.map(({ imgUrl }, index) => {\r\n          return (\r\n            <Col key={index} md={6} sm={6} xs={12}>\r\n              <Card inverse className=\"text-center\">\r\n                <CardImg width=\"100%\" src={imgUrl} alt=\"Card image cap\" />\r\n                <CardImgOverlay>\r\n                  <CardTitle>Card Title</CardTitle>\r\n                  <CardText>inversed card</CardText>\r\n                  <CardText>\r\n                    <small className=\"text-muted\">\r\n                      Last updated 3 mins ago\r\n                    </small>\r\n                  </CardText>\r\n                </CardImgOverlay>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col md={5}>\r\n          <UserCard\r\n            avatar={user1Image}\r\n            title=\"Chris\"\r\n            subtitle=\"Project Lead\"\r\n            text=\"Give me a star!\"\r\n            style={{\r\n              height: 300,\r\n            }}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={7}>\r\n          <Card>\r\n            <Line\r\n              data={getStackLineChart({\r\n                labels: [\r\n                  'January',\r\n                  'February',\r\n                  'March',\r\n                  'April',\r\n                  'May',\r\n                  'June',\r\n                  'July',\r\n                ],\r\n                data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\r\n              })}\r\n              options={stackLineChartOptions}\r\n            />\r\n            <CardBody className=\"text-primary\" style={{ position: 'absolute' }}>\r\n              <CardTitle>Chart Card</CardTitle>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {bgCards.map(({ color }, index) => (\r\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <Card inverse color={color}>\r\n              <CardBody>\r\n                <CardTitle className=\"text-capitalize\">\r\n                  {color} card title\r\n                </CardTitle>\r\n                <CardText>\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Row>\r\n        {gradientCards.map(({ color }, index) => (\r\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <Card\r\n              inverse\r\n              className={`bg-gradient-${color} text-center`}\r\n              style={{ height: 200 }}\r\n            >\r\n              <CardBody className=\"d-flex flex-column flex-wrap justify-content-center align-items-center\">\r\n                <CardTitle>Gradient {color} title</CardTitle>\r\n                <CardText>card text</CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CardPage;\r\n"],"sourceRoot":""}